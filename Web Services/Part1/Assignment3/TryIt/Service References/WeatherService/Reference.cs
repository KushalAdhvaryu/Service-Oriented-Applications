//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TryIt.WeatherService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WeatherDetails", Namespace="http://schemas.datacontract.org/2004/07/Assignment3")]
    [System.SerializableAttribute()]
    public partial class WeatherDetails : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string dateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string descriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float humidityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float max_tempField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float min_tempField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float temperatureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string weatherField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string date {
            get {
                return this.dateField;
            }
            set {
                if ((object.ReferenceEquals(this.dateField, value) != true)) {
                    this.dateField = value;
                    this.RaisePropertyChanged("date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string description {
            get {
                return this.descriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.descriptionField, value) != true)) {
                    this.descriptionField = value;
                    this.RaisePropertyChanged("description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float humidity {
            get {
                return this.humidityField;
            }
            set {
                if ((this.humidityField.Equals(value) != true)) {
                    this.humidityField = value;
                    this.RaisePropertyChanged("humidity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float max_temp {
            get {
                return this.max_tempField;
            }
            set {
                if ((this.max_tempField.Equals(value) != true)) {
                    this.max_tempField = value;
                    this.RaisePropertyChanged("max_temp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float min_temp {
            get {
                return this.min_tempField;
            }
            set {
                if ((this.min_tempField.Equals(value) != true)) {
                    this.min_tempField = value;
                    this.RaisePropertyChanged("min_temp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float temperature {
            get {
                return this.temperatureField;
            }
            set {
                if ((this.temperatureField.Equals(value) != true)) {
                    this.temperatureField = value;
                    this.RaisePropertyChanged("temperature");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string weather {
            get {
                return this.weatherField;
            }
            set {
                if ((object.ReferenceEquals(this.weatherField, value) != true)) {
                    this.weatherField = value;
                    this.RaisePropertyChanged("weather");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WeatherService.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WeatherInfo", ReplyAction="http://tempuri.org/IService1/WeatherInfoResponse")]
        TryIt.WeatherService.WeatherDetails[] WeatherInfo(string zipcode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WeatherInfo", ReplyAction="http://tempuri.org/IService1/WeatherInfoResponse")]
        System.Threading.Tasks.Task<TryIt.WeatherService.WeatherDetails[]> WeatherInfoAsync(string zipcode);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : TryIt.WeatherService.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<TryIt.WeatherService.IService1>, TryIt.WeatherService.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TryIt.WeatherService.WeatherDetails[] WeatherInfo(string zipcode) {
            return base.Channel.WeatherInfo(zipcode);
        }
        
        public System.Threading.Tasks.Task<TryIt.WeatherService.WeatherDetails[]> WeatherInfoAsync(string zipcode) {
            return base.Channel.WeatherInfoAsync(zipcode);
        }
    }
}
